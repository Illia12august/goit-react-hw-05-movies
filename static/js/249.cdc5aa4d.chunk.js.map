{"version":3,"file":"static/js/249.cdc5aa4d.chunk.js","mappings":"oMAEaA,EAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,OAAuC,IAA/BC,MAAAA,OAA+B,MAAvB,iBAAuB,EAC3DC,GAAWC,EAAAA,EAAAA,MACjB,OACE,4BACE,wBAAKF,KACL,wBACGD,EAAOI,KAAI,SAAAC,GACV,IAAQC,EAAcD,EAAdC,GAAIL,EAAUI,EAAVJ,MACZ,OACE,0BACE,SAAC,KAAD,CAAMM,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGD,KAFKK,EAMb,QAIR,C,+JCfYI,EAAY,WACvB,OAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAqBC,EAAAA,EAAAA,aAAW,mCAAC,WAAMC,GAAN,0EAChCA,GAAUA,EAAMC,OADgB,uBAEnCC,EAAAA,GAAAA,MAAY,6CAFuB,oDAOZC,EAAAA,EAAAA,GAAU,uBAAD,OACPH,EADO,+CAPG,OAO7BI,EAP6B,OAUnCV,EAAiBU,EAASC,KAAKC,SAVI,kDAYnCC,QAAQC,IAAR,MAZmC,0DAAD,sDAcnC,KAEHC,EAAAA,EAAAA,YAAU,WACR,IAAMT,EAAQJ,EAAac,IAAI,eAC3BV,GACFF,EAAmBE,EAEtB,GAAE,CAACJ,EAAcE,IAYlB,OACE,4BACE,kBAAMa,SAZW,SAAAC,GACnBA,EAAEC,iBACF,IAAMb,EAAQY,EAAEE,OAAOC,SAASf,MAAMgB,MAEtCnB,EAD+B,KAAVG,EAAe,CAAEiB,YAAajB,GAAU,CAAC,GAG9DF,EAAmBE,GACnBY,EAAEE,OAAOI,OACV,EAIG,WACE,kBACEC,KAAK,OACLC,KAAK,QACLC,YAAY,mBACZC,aAAa,SAEf,mBAAQH,KAAK,SAAb,uBAED1B,EAAc8B,OAAS,IACtB,SAAC,IAAD,CAAW1C,OAAQY,EAAeX,MAAM,aAI/C,ECjDD,EARe,WACb,OACE,+BACE,SAACS,EAAD,KAGL,C,8FCLKiC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOxB,EAAS,mCAAG,WAAMyB,GAAN,gGAEEC,EAAAA,EAAAA,IAAA,UAXV,gCAWU,OAAwBD,GAAYJ,GAFtC,cAEfpB,EAFe,yBAGdA,GAHc,sCAKrBG,QAAQuB,MAAM,yBAAd,MALqB,8DAAH,qD","sources":["components/MoviesList/MoviesList.js","components/SearchMovies/SearchForm.js","pages/MoviesPage/Movies.jsx","services/Movies-API.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies, title = 'Trending today' }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <h1>{title}</h1>\n      <ul>\n        {movies.map(movie => {\n          const { id, title } = movie;\n          return (\n            <div key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import toast from 'react-hot-toast';\nimport { MovieList } from 'components/MoviesList/MoviesList';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovies } from 'services/Movies-API';\n\nexport const SearchBox = () => {\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const fetchMoviesByQuery = useCallback(async query => {\n    if (!query || !query.trim()) {\n      toast.error(\"You didn't enter anything for the search.\");\n      return;\n    }\n\n    try {\n      const response = await getMovies(\n        `/search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n      );\n      setMoviesByQuery(response.data.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    const query = searchParams.get('searchQuery');\n    if (query) {\n      fetchMoviesByQuery(query);\n    }\n  }, [searchParams, fetchMoviesByQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    const updateParams = query !== '' ? { searchQuery: query } : {};\n    setSearchParams(updateParams);\n\n    fetchMoviesByQuery(query);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies...\"\n          autoComplete=\"off\"\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {moviesByQuery.length > 0 && (\n        <MovieList movies={moviesByQuery} title=\"Movies\" />\n      )}\n    </div>\n  );\n};\n","import { SearchBox } from 'components/SearchMovies/SearchForm';\n\nconst Movies = () => {\n  return (\n    <>\n      <SearchBox />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNDU5MDZhNjdiYjRmODc1NTE2MjUxMWYwYmMwZmZjNSIsInN1YiI6IjY0ZTc4OGRlYzYxM2NlMDE0ZGZiODg4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._mEzgbWM_HLA1BRaNaEMWbU8KxVgihcTDELuXNFHkmI',\n  },\n};\n\nexport const getMovies = async endpoint => {\n  try {\n    const response = await axios.get(`${BASE_URL}${endpoint}`, options);\n    return response;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n"],"names":["MovieList","movies","title","location","useLocation","map","movie","id","to","state","from","SearchBox","useState","moviesByQuery","setMoviesByQuery","useSearchParams","searchParams","setSearchParams","fetchMoviesByQuery","useCallback","query","trim","toast","getMovies","response","data","results","console","log","useEffect","get","onSubmit","e","preventDefault","target","elements","value","searchQuery","reset","type","name","placeholder","autoComplete","length","options","headers","accept","Authorization","endpoint","axios","error"],"sourceRoot":""}