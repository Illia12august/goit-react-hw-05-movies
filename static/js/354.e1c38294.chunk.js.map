{"version":3,"file":"static/js/354.e1c38294.chunk.js","mappings":"iOAsEA,UAlEqB,WAAO,IAAD,IACjBA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAoCJ,EAAAA,EAAAA,UAAS,MAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAEpDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,WAAMhB,GAAN,iGAEGiB,EAAAA,EAAAA,GAAU,UAAD,OAAWjB,EAAX,oBAFZ,OAEdkB,EAFc,OAGpBd,EAASc,EAASC,MAClBb,EAAUY,EAASC,KAAKd,QACxBG,EAAcU,EAASC,KAAKC,cALR,gDAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWrBN,EAAgBhB,EACjB,GAAE,CAACA,IAEJ,IAAMuB,EAAclB,EAAOmB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACnDC,GAA2B,GAAbrB,GAAiBsB,QAAQ,GAE7C,IAAK1B,EAAO,OAAO,wCAEnB,IAAQ2B,EAAiC3B,EAAjC2B,MAAOC,EAA0B5B,EAA1B4B,SAAUC,EAAgB7B,EAAhB6B,YAEzB,OACE,iCACE,4BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAG,oBAAeJ,EAAf,aAEL,4BACE,SAAC,KAAD,CAAMK,GAAIxB,EAAayB,QAAvB,mBACA,wBAAKN,KACL,wCAAgBF,EAAhB,SACA,qCACA,uBAAIG,KACJ,qCACA,uBAAIR,WAGR,mBACA,mDACA,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMY,GAAE,kBAAanC,EAAb,SAAR,qBAEF,yBACE,SAAC,KAAD,CAAMmC,GAAE,kBAAanC,EAAb,YAAR,6BAIN,SAAC,EAAAqC,SAAD,CAAUC,UAAU,qCAApB,UACE,SAAC,KAAD,QAIP,C,8FCjEKC,EAAU,CACdC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIOzB,EAAS,mCAAG,WAAM0B,GAAN,gGAEEC,EAAAA,EAAAA,IAAA,UAXV,gCAWU,OAAwBD,GAAYJ,GAFtC,cAEfrB,EAFe,yBAGdA,GAHc,sCAKrBG,QAAQwB,MAAM,yBAAd,MALqB,8DAAH,qD","sources":["components/MovieDetails/MovieDetails.js","services/Movies-API.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovies } from 'services/Movies-API';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [movieVotes, setMovieVotes] = useState(null);\n  const location = useLocation();\n  const backLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieDetails = async id => {\n      try {\n        const response = await getMovies(`/movie/${id}?language=en-US`);\n        setMovie(response.data);\n        setGenres(response.data.genres);\n        setMovieVotes(response.data.vote_average);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getMovieDetails(id);\n  }, [id]);\n\n  const movieGenres = genres.map(genre => genre.name).join(', ');\n  const movieScore = (movieVotes * 10).toFixed(0);\n\n  if (!movie) return <div>Loading...</div>;\n\n  const { title, overview, poster_path } = movie;\n\n  return (\n    <>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={`poster of ${title} movie`}\n        ></img>\n        <div>\n          <Link to={backLocation.current}>Back</Link>\n          <h2>{title}</h2>\n          <p>User Score: {movieScore} %</p>\n          <b>Overview</b>\n          <p>{overview}</p>\n          <b>Genres: </b>\n          <p>{movieGenres}</p>\n        </div>\n      </div>\n      <hr></hr>\n      <p>Additional information</p>\n      <div>\n        <ul>\n          <li>\n            <Link to={`/movies/${id}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNDU5MDZhNjdiYjRmODc1NTE2MjUxMWYwYmMwZmZjNSIsInN1YiI6IjY0ZTc4OGRlYzYxM2NlMDE0ZGZiODg4MCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ._mEzgbWM_HLA1BRaNaEMWbU8KxVgihcTDELuXNFHkmI',\n  },\n};\n\nexport const getMovies = async endpoint => {\n  try {\n    const response = await axios.get(`${BASE_URL}${endpoint}`, options);\n    return response;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    throw error;\n  }\n};\n"],"names":["id","useParams","useState","movie","setMovie","genres","setGenres","movieVotes","setMovieVotes","location","useLocation","backLocation","useRef","state","from","useEffect","getMovieDetails","getMovies","response","data","vote_average","console","log","movieGenres","map","genre","name","join","movieScore","toFixed","title","overview","poster_path","src","alt","to","current","Suspense","fallback","options","headers","accept","Authorization","endpoint","axios","error"],"sourceRoot":""}